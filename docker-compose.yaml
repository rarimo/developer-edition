version: "3.7"

services:
  #
  #
  ################ Validators ################
  #
  #

  validator:
    image: ghcr.io/rarimo/rarimo-core:v1.0.6
    entrypoint: sh -c "rarimo-core start --home=/usr/local/bin/genesis --rpc.laddr tcp://0.0.0.0:26657 --p2p.external-address tcp://validator:26656"
    volumes:
      - ./config/validator/config:/usr/local/bin/genesis/config
      - ./config/validator/data:/usr/local/bin/genesis/data
    ports:
      - "26657:26657"
      - "1317:1317"
      - "9090:9090"
      - "8545:8545"
      - "8546:8546"

  #
  #
  ################ TSS ################
  #
  #

  tss-1:
    image: ghcr.io/rarimo/tss-svc:v1.0.6
    restart: on-failure
    depends_on:
      - tss-1-db
      - validator
    ports:
      - "9001:9000"
      - "1313:1313"
    volumes:
      - ./config/tss/tss1.yaml:/config.yaml
    environment:
      - KV_VIPER_FILE=/config.yaml
      - VAULT_PATH=http://vault:8200
      - VAULT_TOKEN=dev-only-token
      - MOUNT_PATH=secret
      - SECRET_PATH=tss1
      - DAEMON_ARGS=-w 1024
    entrypoint: sh -c "tss-svc migrate up && tss-svc run ${TSS_MODE:-service}"

  tss-1-db:
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_USER=tss
      - POSTGRES_PASSWORD=tss
      - POSTGRES_DB=tss
      - PGDATA=/pgdata
    volumes:
      - tss-1-data:/pgdata

  tss-2:
    image: ghcr.io/rarimo/tss-svc:v1.0.6
    restart: on-failure
    depends_on:
      - tss-2-db
      - validator
    ports:
      - "9002:9000"
    volumes:
      - ./config/tss/tss2.yaml:/config.yaml
    environment:
      - KV_VIPER_FILE=/config.yaml
      - VAULT_PATH=http://vault:8200
      - VAULT_TOKEN=dev-only-token
      - MOUNT_PATH=secret
      - SECRET_PATH=tss2
      - DAEMON_ARGS=-w 1024
    entrypoint: sh -c "tss-svc migrate up && tss-svc run ${TSS_MODE:-service}"

  tss-2-db:
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_USER=tss
      - POSTGRES_PASSWORD=tss
      - POSTGRES_DB=tss
      - PGDATA=/pgdata
    volumes:
      - tss-2-data:/pgdata

  tss-3:
    image: ghcr.io/rarimo/tss-svc:v1.0.6
    restart: on-failure
    depends_on:
      - tss-3-db
      - validator
    ports:
      - "9003:9000"
    volumes:
      - ./config/tss/tss3.yaml:/config.yaml
    environment:
      - KV_VIPER_FILE=/config.yaml
      - VAULT_PATH=http://vault:8200
      - VAULT_TOKEN=dev-only-token
      - MOUNT_PATH=secret
      - SECRET_PATH=tss3
      - DAEMON_ARGS=-w 1024
    entrypoint: sh -c "tss-svc migrate up && tss-svc run ${TSS_MODE:-service}"

  tss-3-db:
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_USER=tss
      - POSTGRES_PASSWORD=tss
      - POSTGRES_DB=tss
      - PGDATA=/pgdata
    volumes:
      - tss-3-data:/pgdata

  tss-4:
    image: ghcr.io/rarimo/tss-svc:v1.0.6
    restart: on-failure
    depends_on:
      - tss-4-db
      - validator
    ports:
      - "9004:9000"
    volumes:
      - ./config/tss/tss4.yaml:/config.yaml
    environment:
      - KV_VIPER_FILE=/config.yaml
      - VAULT_PATH=http://vault:8200
      - VAULT_TOKEN=dev-only-token
      - MOUNT_PATH=secret
      - SECRET_PATH=tss4
    entrypoint: sh -c "tss-svc migrate up && tss-svc run ${TSS_MODE:-service}"

  tss-4-db:
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_USER=tss
      - POSTGRES_PASSWORD=tss
      - POSTGRES_DB=tss
      - PGDATA=/pgdata
    volumes:
      - tss-4-data:/pgdata

  #
  #
  ################ VAULT ################
  #
  #

  vault:
    image: vault:1.13.3
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: dev-only-token
    ports:
      - 8200:8200

  #
  #
  ################ ISSUER ################
  #
  #

  issuer-db:
    image: postgres:14-alpine
    hostname: postgres
    environment:
      - PGPORT=5432
      - PGUSER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
    volumes:
      - ./config/issuer-db-migrate:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  issuer-redis:
    image: redis:6-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "6379", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  issuer-vault:
    image: vault:1.13.2
    volumes:
      - ./config/vault/config:/vault/config
      - ./config/vault/policies:/vault/policies
      - ./config/vault/scripts:/vault/scripts
      - ./config/vault/plugins:/vault/plugins
      - ./config/vault/data:/vault/data
      - ./config/vault/file:/vault/file:rw
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
      - VAULT_ADDRESS=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: ./vault/scripts/init.sh

  issuer-api:
    image: ghcr.io/rarimo/issuernode:v3.0.0-rc.2
    depends_on:
      - issuer-db
      - issuer-redis
      - vault
    ports:
      - "3001:3001"
    env_file:
      - ./config/.env-api
      - ./config/.env-issuer
    command: sh -c "sleep 30s && ./migrate && ./platform"

  issuer-api-ui:
    image: ghcr.io/rarimo/issuernode:v3.0.0-rc.2
    depends_on:
      - issuer-db
      - issuer-redis
      - vault
    ports:
      - "3002:3002"
    env_file:
      - ./config/.env-api
      - ./config/.env-issuer
    command: sh -c "sleep 4s && ./migrate && ./platform_ui"

  issuer-notifications:
    image: ghcr.io/rarimo/issuernode:v3.0.0-rc.2
    depends_on:
      - issuer-db
      - issuer-redis
      - vault
    env_file:
      - ./config/.env-api
      - ./config/.env-issuer
    command: sh -c "sleep 4s && ./notifications"

  issuer-pending-publisher:
    image: ghcr.io/rarimo/issuernode:v3.0.0-rc.2
    depends_on:
      - issuer-db
      - issuer-redis
      - vault
    env_file:
      - ./config/.env-api
      - ./config/.env-issuer
    command: sh -c "sleep 4s && ./pending_publisher"

  issuer-initializer:
    image: ghcr.io/rarimo/issuernode:v3.0.0-rc.2
    depends_on:
      - issuer-db
      - issuer-redis
      - vault
    env_file:
      - ./config/.env-api
      - ./config/.env-issuer
    command: sh -c "sleep 4s && ./migrate && mkdir did && mkdir did/data && ./issuer_initializer"

volumes:
  tss-1-data:
  tss-2-data:
  tss-3-data:
  tss-4-data:
